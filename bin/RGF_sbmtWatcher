#!/usr/bin/env python3
from watchers.submissions import subm_watcher
import argparse
import os
import time
__author__ = "Antonio Marinho da Silva Neto"
__copyright__ = "Copyright 2021, Rede Genomica Fiocruz"
__credits__ = []
__license__ = "GPL"
__version__ = "0.1"
__maintainer__ = "Antonio Marinho da Silva Neto"
__email__ = "antonio.marinho@fiocruz.br"
__status__ = "Prototype"


# -- Docstring -----------------------------------------------------------------
'''
RGF_sbnmWatcher
----

This script activate the submissions watcher routine. This routine will monitor
a given directory for the presence of a new 'submit.txt'. If a new 'submit.txt'
is created, the routines for creating sequencing batchs documents and feed
mongoDB will be triggered.

Usage
----

>$ RGF_sbnmWatcher <dir_path> <cred_flpath> <db_name>

Input
-----
dir_path: Path of directory to be monitored
cred_flpath: Path to database credentials file
db_name: Database name to be used

WARNING:
This script assumes a given directory structure to extract metadata for the
documents and that there is a MongoDB server instance running.
Be sure those requirements are met.

'''

#-------------------------------------------------------------------------------

dsc = '''
This script activate the submissions watcher routine. This routine will monitor
a given directory for the presence of a new 'submit.txt'. If a new 'submit.txt'
is created, the routines for creating documents and feed mongoDB will be
triggered.
'''


# ---- INPUT -------------------------------------------------------------------
parser = argparse.ArgumentParser(description=dsc)
parser.add_argument('dir_path', type=str, help='path of directory to monitor')
parser.add_argument('cred_flpath', type=str,
                    help='path to database credentials file')

parser.add_argument('db_name', type=str,
                    help='database name to be used')

args = parser.parse_args()


print('| --------------------------------------------------------------------|')
print('|                            >> RGF Submition Watcher <<')
print('|                                RGF backend v0.1')
print('|                    made by Aggeu MagalhÃ£es Research Institute')
print('|                             FIOCRUZ - Pernambuco')
print('| --------------------------------------------------------------------|')
print('| ')
print('| This script activate the submissions watcher routine. This routine')
print("| will monitor a given directory for the presence of a new 'submit.txt'.")
print("| If a new 'submit.txt' is created, the routines for creating documents")
print("| and feed mongoDB will be triggered.")
print('| ')
print('| --------------------------------------------------------------------|')
print('| Written by:')
print('|    PhD. Antonio Marinho da Silva Neto (antonio.marinho@fiocruz.br')
print('| More information at: ')
print('|    https://github.com/AMarinhoSN/RGFbackend')
print('| --------------------------------------------------------------------|')
print("| WARNING:")
print("| This script assumes a given directory structure to extract metadata ")
print("| for the documents and that there is a MongoDB server instance running.")
print("| Be sure those requirements are met.")
print('| --------------------------------------------------------------------|')
print("| USAGE:")
print("|      >$ RGF_sbnmWatcher <dir_path> <cred_flpath> <db_name>")
print('| --------------------------------------------------------------------|')

# parameters assignment
cred_flpath = args.cred_flpath
src_path = args.dir_path
dbName = args.db_name

assert(os.path.isdir(src_path)), 'path provided is not a directory'

print("@ starting subwatcher")
# start watcher
watcher = subm_watcher(cred_flpath, src_path, dbName)
watcher.activate()
print("   > running...")
try:
    while True:
        time.sleep(1)
except KeyboardInterrupt:
    watcher.deactivate()
    print(" THE SUBMISSIONS WATCHDOG WAS MURDERED... by a keyboard interruption.")
