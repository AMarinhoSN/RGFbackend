#!/usr/bin/env python3
import dbInterface.mongoInterface
import argparse

dsc = '''
This script is designed to manage genome providers collections of Rede Genomica
Fiocruz.
'''

# ---- INPUT -------------------------------------------------------------------
parser = argparse.ArgumentParser(description=dsc)
parser.add_argument('dbcred_flpath', type=str,
                    help='path to Mongo DB credentials')

parser.add_argument('-db_name', type=str, default='rgf_db',
                    help='target database name')
parser.add_argument('new_prvdr_flpath', type=str,
                    help='path to new provider data')

parser.add_argument('-add', type=bool, default=True)

args = parser.parse_args()
cred_flpath = args.dbcred_flpath
db_name = args.db_name
new_prvdr_flpath = args.new_prvdr_flpath

print('| --------------------------------------------------------------------|')
print('|                        >> RGF Manage Genome Provider <<')
print('|                                RGF backend')
print('|                    made by Aggeu MagalhÃ£es Research Institute')
print('|                               FIOCRUZ - Pernambuco')
print('| --------------------------------------------------------------------|')
print('| ')
print('| This script is designed to manage genome providers collections of ')
print('| Rede Genomica Fiocruz.')
print('| ')
print('| --------------------------------------------------------------------|')
print('| Written by:')
print('|    PhD. Antonio Marinho da Silva Neto (antonio.marinho@fiocruz.br')
print('| More information at: ')
print('|    https://github.com/AMarinhoSN/RGFbackend')
print('| --------------------------------------------------------------------|')
# log into database
print("@ logging into database...")
DBclient = dbInterface.mongoInterface.DataBase(cred_flpath,
                                               database_name=db_name)
print("  > databases available: ")
print('  ', DBclient.client.list_database_names())

# add new provider register
if args.add == True:
    print("@ adding new genome provider")
    DBclient.insert_new_gnmProvider(new_prvdr_flpath)
    # TODO check if new document was added
    #DBclient.DB.genomeProviders.find({'code':'IAM'}).count()
print(":: DONE ::")
